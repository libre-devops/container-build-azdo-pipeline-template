---
parameters:
  - name: USERNAME
    displayName: "Username to be passed for registry login"
    type: string

  - name: PASSWORD
    displayName: "Password or access token for registry login"
    type: string

  - name: CONTEXT
    displayName: "The the path to your dockerfile"
    type: string

  - name: DOCKERFILE_NAME
    displayName: "The name of the Dockerfile"
    default: "Dockerfile"
    type: string

  - name: NORMAL_USER
    displayName: "The name for the container user"
    default: $(head /dev/urandom | tr -dc A-Za-z0-9 | head -c10)
    type: string

  - name: DOTNET_VERSION
    displayName: "The version of Dotnet to be installed"
    default: "6.0"
    type: string

  - name: AZP_URL
    displayName: "The URL of your Azure DevOps instance, e.g. https://dev.azure.com/example"
    type: string
    default: "blah"

  - name: AZP_TOKEN
    displayName: "The PAT token for your Agent to access Azure DevOps"
    type: string
    default: "blah"

  - name: AZP_AGENT_NAME
    displayName: "The name for your agent"
    default: $(head /dev/urandom | tr -dc A-Za-z0-9 | head -c10)
    type: string

  - name: AZP_POOL
    displayName: "The pool for your agent to join"
    type: string
    default: "blah"

  - name: AZP_WORK
    displayName: "The default working directory for your agent"
    default: "_work"
    type: string

  - name: REGISTRY
    displayName: "The target registry"
    type: string

  - name: IMAGE_NAME
    displayName: "The name of the image"
    type: string

  - name: TAGS
    displayName: "The tag of the image"
    type: string
    default: ":latest"

  - name: HOSTED_AGENT_IMAGE
    displayName: "The name of the vmImage for Azure Hosted Pools"
    type: string
    default: "ubuntu-latest"

  - name: USE_PODMAN
    displayName: "Whether to run the builds with podman"
    type: boolean
    default: false

  - name: USE_DOCKER
    displayName: "Whether to run the builds with docker"
    type: boolean
    default: false

################## DO NOT EDIT ANYTHING PAST HERE UNLESS YOU KNOW WHAT YOU ARE DOING ##################

steps:

  - checkout: self

  - bash: |
      
      set -e
      
      podman login -u ${{ parameters.USERNAME }} -p ${{ parameters.PASSWORD }} ${{ parameters.REGISTRY }} && \
      
      podman build \
      --file="${{ parameters.DOCKERFILE_NAME }}" \
      --tag="${{ parameters.REGISTRY }}/${{ parameters.USERNAME }}/${{ parameters.IMAGE_NAME }}${{ parameters.TAGS }}" \
      --build-arg NORMAL_USER="${{ parameters.NORMAL_USER }}"  \
      --build-arg ACCEPT_EULA="y" \
      --build-arg DOTNET_VERSION="${{ parameters.DOTNET_VERSION }}" \
      --build-arg AZP_URL="${{ parameters.AZP_URL }}" \
      --build-arg AZP_TOKEN="${{ parameters.AZP_TOKEN }}" \
      --build-arg AZP_POOL="${{ parameters.AZP_POOL }}" \
      --build-arg AZP_WORK="${{ parameters.AZP_WORK }}" && \
      
      podman push "${{ parameters.REGISTRY }}/${{ parameters.USERNAME }}/${{ parameters.IMAGE_NAME }}${{ parameters.TAGS }}"
      
      podman logout ${{ parameters.REGISTRY }}
    displayName: Run Podman Login, Build, Push and Logout
    workingDirectory: ${{ parameters.CONTEXT }}
    condition: and(eq(${{ parameters.USE_PODMAN }}, true), eq(${{ parameters.USE_DOCKER }}, false))


  - bash: |
      
      set -e
      
      docker login -u ${{ parameters.USERNAME }} -p ${{ parameters.PASSWORD }} ${{ parameters.REGISTRY }} && \
      
      docker build \
      --file="${{ parameters.DOCKERFILE_NAME }}" \
      --tag="${{ parameters.REGISTRY }}/${{ parameters.USERNAME }}/${{ parameters.IMAGE_NAME }}${{ parameters.TAGS }}" \
      --build-arg NORMAL_USER="${{ parameters.NORMAL_USER }}"  \
      --build-arg ACCEPT_EULA="y" \
      --build-arg DOTNET_VERSION="${{ parameters.DOTNET_VERSION }}" \
      --build-arg AZP_URL="${{ parameters.AZP_URL }}" \
      --build-arg AZP_TOKEN="${{ parameters.AZP_TOKEN }}" \
      --build-arg AZP_POOL="${{ parameters.AZP_POOL }}" \
      --build-arg AZP_WORK="${{ parameters.AZP_WORK }}" && \
      
      docker push "${{ parameters.REGISTRY }}/${{ parameters.USERNAME }}/${{ parameters.IMAGE_NAME }}${{ parameters.TAGS }}"
      
      docker logout ${{ parameters.REGISTRY }}
    displayName: Run Docker Login, Build, Push and Logout
    workingDirectory: ${{ parameters.CONTEXT }}
    condition: and(eq(${{ parameters.USE_PODMAN }}, false), eq(${{ parameters.USE_DOCKER }}, true))
